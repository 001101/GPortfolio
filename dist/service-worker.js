"use strict";var precacheConfig=[["https://alexeykhr.github.io/dist/4113edbe480fdeb4a887bd2638820e31.svg","4113edbe480fdeb4a887bd2638820e31"],["https://alexeykhr.github.io/dist/5f72b09dd5180da55431d6846f3b4608.jpg","5f72b09dd5180da55431d6846f3b4608"],["https://alexeykhr.github.io/dist/912ec66d7572ff821749319396470bde.svg","912ec66d7572ff821749319396470bde"],["https://alexeykhr.github.io/dist/f44d1a7cb9d2e8ed692f2354f3fb46f5.jpg","f44d1a7cb9d2e8ed692f2354f3fb46f5"],["https://alexeykhr.github.io/dist/icon_128x128.d21869e4ba4e848ed5b178d7b02c1b73.jpeg","d21869e4ba4e848ed5b178d7b02c1b73"],["https://alexeykhr.github.io/dist/icon_192x192.4047643d9ff77b241106230d3f349214.jpeg","4047643d9ff77b241106230d3f349214"],["https://alexeykhr.github.io/dist/icon_256x256.5bccda1816d5a28ec958b2a564291cb0.jpeg","5bccda1816d5a28ec958b2a564291cb0"],["https://alexeykhr.github.io/dist/icon_384x384.035ccfa1b62ade891f2edeedc9e6fcdd.jpeg","035ccfa1b62ade891f2edeedc9e6fcdd"],["https://alexeykhr.github.io/dist/icon_512x512.bc425d9c0a31bae9d9639f3cb3d03134.jpeg","bc425d9c0a31bae9d9639f3cb3d03134"],["https://alexeykhr.github.io/dist/icon_96x96.d4b78592fcb8488416f28824d69f1f8b.jpeg","d4b78592fcb8488416f28824d69f1f8b"],["https://alexeykhr.github.io/dist/main.css","7a8efbb34da08f9448bea8552d96cf24"],["https://alexeykhr.github.io/dist/main.js","f9146f9418cb9a9c70936676b3833869"],["https://alexeykhr.github.io/dist/manifest.946cb9c276e5c153bdabcaf138cf2b87.json","946cb9c276e5c153bdabcaf138cf2b87"]],cacheName="sw-precache-v3-alexey-khrushch-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,n,r){var a=new URL(e);return r&&a.pathname.match(r)||(a.search+=(a.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),a.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],r=new URL(t,self.location),a=createCacheKey(r,hashParamName,n,/\.\w{8}\./);return[r.toString(),a]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var r=new Request(n,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!t.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,"index.html"),t=urlsToCacheKeys.has(n));!t&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(n=new URL("https://alexeykhr.github.io/",self.location).toString(),t=urlsToCacheKeys.has(n)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});